# Key values - Directives
# Objects/groups - Contexts

# work processes -> gets & processes requests
# Load proportional to amount of work
# That is the number of cpu cores
worker_processes 1;
# worker_processes auto;

# How many simultaneous requests
events {
    worker_connections 1024; #increases memory usage
}

# CORE - main config
http {
    # file types of response
    include mime.types;

    upstream nodejs_cluster {
        least_conn; #algorithm for Load balancing
        server 127.0.0.1:3001;  #docker instances
        server 127.0.0.1:3002;
        server 127.0.0.1:3003;
    }

    server {
        # listen 8080; #localhost - http
        listen 443 ssl; #localhost - ssl - https
        server_name localhost; #domain www.google.com

        ssl_certificate /Users/sowmya/Documents/sowmya/nginx-certs/nginx-selfsigned.crt;
        ssl_certificate_key /Users/sowmya/Documents/sowmya/nginx-certs/nginx-selfsigned.key;

        location / {
            #we're setting nginx as LB & act as proxy
            proxy_pass http://nodejs_cluster; #here it starts acting as proxy
            proxy_set_header Host $host;  #important info required by backend to process the request
            proxy_set_header X-Real-IP $remote_addr;
        }
    }

    server {  #this logic is to redirect to https even if user types http for that host
        listen 80;
        server_name localhost;

        location / {
            return 301 https://${host}${request_uri};
        }
    }
}

